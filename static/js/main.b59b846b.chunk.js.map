{"version":3,"sources":["components/Tracker.js","components/Display.js","App.js","index.js"],"names":["DefaultIcon","L","icon","iconUrl","shadowUrl","iconShadow","Map","props","ChangeMapView","coords","map","useMap","setView","getZoom","height","getComputedStyle","document","documentElement","getPropertyValue","MapContainer","zoomControl","center","cords","latitude","longitude","zoom","style","zIndex","TileLayer","attribution","url","Marker","position","Popup","prototype","options","Display","ip","location","timezone","isp","className","defaultCords","defaultData","App","useState","setCords","data","setData","search","setSearch","click","setClick","useEffect","a","fetch","response","json","lat","lng","console","log","fetchData","input","action","onChange","e","target","value","type","spellCheck","placeholder","onClick","preventDefault","includes","window","alert","city","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b59b846b.chunk.js","sourcesContent":["import { MapContainer, TileLayer, Marker, Popup, useMap} from \"react-leaflet\";\r\nimport icon from 'leaflet/dist/images/marker-icon.png';\r\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png';\r\nimport L from 'leaflet';\r\nimport React from 'react';\r\n\r\nlet DefaultIcon = L.icon({\r\n  iconUrl: icon,\r\n  shadowUrl: iconShadow\r\n});\r\n\r\nL.Marker.prototype.options.icon = DefaultIcon;\r\n\r\nexport default function Map(props) {\r\n \r\nfunction ChangeMapView({ coords }) {\r\n  const map = useMap();\r\n  map.setView(coords, map.getZoom());\r\n\r\n  return null;\r\n}\r\n\r\nconst height = getComputedStyle(document.documentElement)\r\n.getPropertyValue('--height');\r\n\r\n  return (\r\n    <MapContainer zoomControl={false} center={[props.cords.latitude, props.cords.longitude]} zoom={13} style={{ height: height , zIndex: 1}}>\r\n      <TileLayer\r\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n      />\r\n      <Marker position={[props.cords.latitude, props.cords.longitude]}>\r\n        <Popup><span>\r\n          Placeholder\r\n          </span>\r\n        </Popup>\r\n      </Marker>\r\n      <ChangeMapView coords={[props.cords.latitude, props.cords.longitude]}/>\r\n    </MapContainer>\r\n  );\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport './Display.css';\r\n\r\nconst Display = ({ip, location, timezone, isp}) => {\r\n    return ( \r\n    <div className=\"display-wrapper\">\r\n        <div className=\"ip-address\">IP ADDRESS<br/><br/><span>{ip}</span></div>\r\n        <div className=\"location\">LOCATION<br/><br/><span>{location}</span></div>\r\n        <div className=\"timezone\">TIMEZONE<br/><br/><span>{timezone}</span></div>\r\n        <div className=\"isp\">ISP<br/><br/><span>{isp}</span></div>\r\n    </div>\r\n     );\r\n}\r\n \r\nexport default Display;","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Tracker from './components/Tracker';\nimport Display from './components/Display';\n\nconst defaultCords = {\n  \"latitude\": 49.688919,\n  \"longitude\": 19.200649\n}\n\nconst defaultData = {\n  \"ip\": \"-\",\n  \"location\": {\n    \"city\": \"-\",\n    \"timezone\": \"-\"\n  },\n  \"isp\": \"-\"\n}\n\nfunction App() {\n  const [cords, setCords] = useState(defaultCords);\n  const [data, setData] = useState(defaultData);\n  const [search, setSearch] = useState(\"\");\n  const [click, setClick] = useState(false);\n\n  const url = `https://geo.ipify.org/api/v1?apiKey=at_J9T6UXAUk2lTqjQD5LbX2XnlndjHg&ipAddress=${search}&domain=${search}`;\n\n    useEffect(() => {\n      const fetchData = async () => {\n        try {\n          const response = await fetch(url);\n          const json = await response.json();\n          setData(json);\n          const coords = await [json.location.lat, json.location.lng];\n          setCords({\n            \"latitude\": coords[0],\n            \"longitude\": coords[1]\n          })\n        } catch (error) {\n          console.log(\"error\", error);\n        }\n      };\n  \n      fetchData();\n  }, [click]);\n\n  let input = \"\";\n\n  const handleChange = (e) =>{\n    input = e.target.value;\n  }\n\n\n  const handleClick = (e) =>{\n    e.preventDefault();\n    if(input.includes(\".\")){\n      setSearch(input);\n      }\n      else{\n        window.alert(\"This is not ip address or domain\");\n      }\n    setClick(!click)\n  }\n\n  return (\n    <div className=\"App\">\n     <header>\n       <h1>IP Address Tracker</h1>\n       <form action=\"\">\n         <input onChange={handleChange} type=\"text\" spellCheck=\"false\" placeholder=\"Search for any IP address or domain\" />\n         <button type=\"submit\" onClick={handleClick}>&gt;</button>\n       </form>\n     </header>\n      <Display ip={data.ip} location={data.location.city} timezone={data.location.timezone} isp={data.isp}/>\n     <Tracker cords={cords}/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'leaflet/dist/leaflet.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}